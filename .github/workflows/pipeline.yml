name: Pipeline
on:
  push:
    branches:
      - main
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses:
          actions/checkout@v2
      # - name: Use Node.js ${{ matrix.node-version }}
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: ${{ matrix.node-version }}
      # - name: Cache node modules
      #   id: cache-nodemodules
      #   uses: actions/cache@v2
      #   env:
      #     cache-name: cache-node-modules
      #   with:
      #     # caching node_modules
      #     path: node_modules
      #     key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-build-${{ env.cache-name }}-
      #       ${{ runner.os }}-build-
      #       ${{ runner.os }}-
      - name: Install Dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: |
          npm ci
      - name: Build
        run: |
          npm run build
      # CANCEL CASE
      - name: The job has cancelled
        if: ${{ cancelled() }}
        uses: rohit-gohri/jira-ci-cd-integration@v0
        with:
          state: cancel
          environment: unmapped
          issue: FTP-10 # Comma separated list of issues being deployed/released. You are expected to generate this yourself in a previous step for releases
          jira_instance: kostanets # Subdomain for Jira Cloud
          client_id: ${{ secrets.JIRA_CLIENT_ID }}
          client_secret: ${{ secrets.JIRA_CLIENT_SECRET }}
      # FAILURE CASE
      - name: The job has failed
        if: ${{ failure() }}
        uses: rohit-gohri/jira-ci-cd-integration@v0
        with:
          state: failed
          environment: development
          issue: FTP-10 # Comma separated list of issues being deployed/released. You are expected to generate this yourself in a previous step for releases
          jira_instance: kostanets # Subdomain for Jira Cloud
          client_id: ${{ secrets.JIRA_CLIENT_ID }}
          client_secret: ${{ secrets.JIRA_CLIENT_SECRET }}
      # SUCCESS CASE
      - name: The job has succeeded
        if: ${{ success() }}
        uses: rohit-gohri/jira-ci-cd-integration@v0
        with:
          state: ${{ job.status }}
          environment: staging
          issue: FTP-10 # Comma separated list of issues being deployed/released. You are expected to generate this yourself in a previous step for releases
          jira_instance: kostanets # Subdomain for Jira Cloud
          client_id: ${{ secrets.JIRA_CLIENT_ID }}
          client_secret: ${{ secrets.JIRA_CLIENT_SECRET }}
